{
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,
  "github.copilot.advanced": {
    "debug.overrideEngine": "gpt-4",
    "inlineSuggestCount": 3
  },
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": false,
    "markdown": true
  },
  // MCP Server Configurations for GitHub Copilot
  "mcp.servers": {
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "${workspaceFolder}"
      ],
      "description": "File system operations for the workspace"
    },
    "github": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${env:GITHUB_TOKEN}"
      },
      "description": "GitHub repository operations"
    },
    "postgres": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-postgres",
        "postgresql://postgres:${env:SUPABASE_DB_PASSWORD}@db.zeabnuknlnaranrpmyne.supabase.co:5432/postgres"
      ],
      "description": "PostgreSQL/Supabase database operations"
    },
    "brave-search": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-brave-search"
      ],
      "env": {
        "BRAVE_API_KEY": "${env:BRAVE_API_KEY}"
      },
      "description": "Web search for documentation and current information"
    },
    "time": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-time"
      ],
      "description": "Timezone conversions and date calculations for astrology"
    },
    "fetch": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-fetch"
      ],
      "description": "Fetch web content and test API endpoints"
    },
    "memory": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory"
      ],
      "description": "Knowledge graph for project context and learning"
    },
    "git": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-git",
        "--repository",
        "${workspaceFolder}"
      ],
      "description": "Git operations: commit, log, diff, branch management"
    },
    "puppeteer": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-puppeteer"
      ],
      "description": "Browser automation and screenshot capture"
    },
    "slack": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-slack"
      ],
      "env": {
        "SLACK_BOT_TOKEN": "${env:SLACK_BOT_TOKEN}",
        "SLACK_TEAM_ID": "${env:SLACK_TEAM_ID}"
      },
      "description": "Slack team collaboration and notifications"
    },
    "gdrive": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-gdrive"
      ],
      "description": "Google Drive file management and sharing"
    },
    "sentry": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sentry"
      ],
      "env": {
        "SENTRY_DSN": "${env:EXPO_PUBLIC_SENTRY_DSN}"
      },
      "description": "Error monitoring and crash reporting"
    },
    "sqlite": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sqlite",
        "${workspaceFolder}/data/cache.db"
      ],
      "description": "SQLite local database for caching and offline data"
    },
    "everything": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-everything"
      ],
      "description": "Search everything in the system (files, docs, etc.)"
    },
    "shadcn-ui": {
      "command": "npx",
      "args": [
        "-y",
        "@upstash/mcp-server-shadcn-ui"
      ],
      "description": "Shadcn UI component library integration and documentation"
    },
    "testsprite": {
      "command": "npx",
      "args": [
        "-y",
        "@testsprite/mcp-server"
      ],
      "description": "TestSprite automated testing and QA"
    },
    "npm": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-npm"
      ],
      "description": "NPM package management and documentation"
    },
    "sequential-thinking": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ],
      "description": "Advanced problem-solving with chain of thought reasoning"
    },
    "axios": {
      "command": "npx",
      "args": [
        "-y",
        "@mcp-get/axios"
      ],
      "description": "Axios HTTP client documentation and examples"
    },
    "code-runner": {
      "command": "npx",
      "args": [
        "-y",
        "@mcp-server/code-runner"
      ],
      "description": "Run code snippets and test functions inline"
    }
  },
  // Code Context Settings
  "github.copilot.chat.localeOverride": "tr",
  "github.copilot.chat.welcomeMessage": "firstUse",
  
  // Workspace specific settings
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  
  // Editor settings for better Copilot experience
  "editor.inlineSuggest.enabled": true,
  "editor.quickSuggestions": {
    "strings": true,
    "comments": true,
    "other": true
  }
}
